---
# tasks file for azure_cli

- name: Install dependencies for Azure CLI installation
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - apt-transport-https
      - lsb-release
      - gnupg
    state: present
    update_cache: true
  tags:
    - azure_cli
    - azure
    - packages
    - cloud
    - dependencies

- name: Check if Azure CLI is already installed
  ansible.builtin.command: az --version
  register: azure_cli_installed
  changed_when: false
  failed_when: false
  tags:
    - azure_cli
    - azure
    - cloud

- name: Display current Azure CLI version if installed
  ansible.builtin.debug:
    msg: "Azure CLI already installed: {{ azure_cli_installed.stdout_lines[0] }}"
  when: azure_cli_installed.rc == 0
  tags:
    - azure_cli
    - azure
    - cloud

- name: Create directory for Microsoft GPG key
  ansible.builtin.file:
    path: /usr/share/keyrings
    state: directory
    mode: '0755'
  tags:
    - azure_cli
    - azure
    - cloud

- name: Check if Azure CLI GPG keyring exists and is valid
  ansible.builtin.command: gpg --list-keys --keyring "{{ azure_cli_keyring_path }}"
  register: azure_cli_keyring_check
  changed_when: false
  failed_when: false
  tags:
    - azure_cli
    - azure
    - cloud
    - security

- name: Remove corrupted Azure CLI GPG keyring if invalid
  ansible.builtin.file:
    path: "{{ azure_cli_keyring_path }}"
    state: absent
  when: azure_cli_keyring_check.rc != 0
  tags:
    - azure_cli
    - azure
    - cloud
    - security

- name: Download Microsoft GPG key
  ansible.builtin.get_url:
    url: "{{ azure_cli_gpg_key_url }}"
    dest: "{{ azure_cli_temp_keyring }}"
    mode: '0644'
  tags:
    - azure_cli
    - azure
    - cloud
    - download

- name: Convert and install Microsoft GPG key to keyring
  ansible.builtin.command:
    cmd: gpg --dearmor --output {{ azure_cli_keyring_path }} {{ azure_cli_temp_keyring }}
  args:
    creates: "{{ azure_cli_keyring_path }}"
  tags:
    - azure_cli
    - azure
    - cloud

- name: Remove temporary GPG key file
  ansible.builtin.file:
    path: "{{ azure_cli_temp_keyring }}"
    state: absent
  tags:
    - azure_cli
    - azure
    - cloud
    - cleanup

- name: Get Ubuntu codename
  ansible.builtin.command: lsb_release -cs
  register: ubuntu_codename
  changed_when: false
  tags:
    - azure_cli
    - azure
    - cloud

- name: Add Microsoft Azure CLI repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by={{ azure_cli_keyring_path }}] {{ azure_cli_repo_url }} {{ ubuntu_codename.stdout }} main"
    filename: azure-cli
    state: present
  tags:
    - azure_cli
    - azure
    - cloud

- name: Install Azure CLI
  ansible.builtin.apt:
    name: azure-cli
    state: present
    update_cache: true
  when: azure_cli_installed.rc != 0
  tags:
    - azure_cli
    - azure
    - cloud
    - packages

- name: Verify Azure CLI installation
  ansible.builtin.command: az --version
  register: azure_cli_version
  changed_when: false
  tags:
    - azure_cli
    - azure
    - cloud

- name: Enable Azure CLI bash completion
  ansible.builtin.lineinfile:
    path: /etc/bash.bashrc
    line: "source /etc/bash_completion.d/azure-cli"
    create: true
    mode: '0644'
  tags:
    - azure_cli
    - azure
    - cloud
    - completion

- name: Display Azure CLI installation info
  ansible.builtin.debug:
    msg: |
      Azure CLI has been installed successfully!

      Version: {{ azure_cli_version.stdout_lines[0] }}

      Useful commands:
      - az --version                : Show Azure CLI version
      - az login                    : Authenticate with Azure
      - az login --use-device-code  : Login via device code
      - az account list             : List Azure subscriptions
      - az account show             : Show current subscription
      - az account set -s <sub-id>  : Set active subscription
      - az help                     : Show help
      - az <service> --help         : Service-specific help

      Initial setup:
      1. Login to Azure: az login
         - Opens browser for authentication
         - Sets default subscription

      2. Alternative login methods:
         - Service Principal: az login --service-principal -u <app-id> -p <password> --tenant <tenant>
         - Managed Identity: az login --identity
         - Device code: az login --use-device-code

      3. Configure defaults:
         az config set defaults.location=eastus
         az config set defaults.group=myResourceGroup

      Configuration:
      - Configuration file: ~/.azure/config
      - Credentials: Managed by Azure Identity
      - Cloud profiles: az cloud list

      Common commands:
      - az vm list                        : List virtual machines
      - az group list                     : List resource groups
      - az storage account list           : List storage accounts
      - az webapp list                    : List web apps
      - az aks list                       : List AKS clusters
      - az acr list                       : List container registries
      - az keyvault list                  : List key vaults
      - az sql server list                : List SQL servers

      Multiple subscriptions:
      - az account list --output table
      - az account set --subscription <subscription-id>

      Output formats:
      - --output json     : JSON format (default)
      - --output yaml     : YAML format
      - --output table    : ASCII table format
      - --output tsv      : Tab-separated values
      - --output jsonc    : Colored JSON

      Query results (JMESPath):
      - az vm list --query '[].{name:name, size:hardwareProfile.vmSize}'

      Interactive mode:
      - az interactive    : Enter interactive shell with autocomplete

      Bash completion has been enabled!
      You may need to restart your shell or run: source /etc/bash.bashrc
  tags:
    - azure_cli
    - azure
    - cloud
