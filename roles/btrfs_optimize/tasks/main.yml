---
# tasks file for btrfs_optimize

- name: Ensure backup directory exists
  ansible.builtin.file:
    path: "{{ btrfs_fstab_backup_dir }}"
    state: directory
    mode: '0700'
    owner: root
    group: root
  when: btrfs_create_backup
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - backup

- name: Create timestamped backup of fstab
  ansible.builtin.copy:
    src: /etc/fstab
    dest: "{{ btrfs_fstab_backup_dir }}/fstab.{{ ansible_date_time.iso8601_basic_short }}"
    remote_src: true
    mode: '0600'
    owner: root
    group: root
  when: btrfs_create_backup
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - backup

- name: Check current fstab for BTRFS entries
  ansible.builtin.shell: |
    set -o pipefail
    grep -E '^\s*UUID=.*\s+btrfs\s+' /etc/fstab || true
  register: current_btrfs_entries
  changed_when: false
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem

- name: Display current BTRFS mount options
  ansible.builtin.debug:
    msg: |
      Current BTRFS entries in /etc/fstab:
      {{ current_btrfs_entries.stdout }}

      Will be optimized with: {{ btrfs_mount_options }}
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem

- name: Optimize BTRFS mount options for root subvolume
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^(\s*UUID=[a-f0-9-]+)\s+/\s+btrfs\s+.*subvol=/@.*$'
    backrefs: true
    line: '\1 /              btrfs   subvol=/@,{{ btrfs_mount_options }} 0 0'
    backup: false
    validate: '/usr/bin/findmnt --verify --tab-file %s'
  register: root_fstab_modified
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - root

- name: Optimize BTRFS mount options for home subvolume
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^(\s*UUID=[a-f0-9-]+)\s+/home\s+btrfs\s+.*subvol=/@home.*$'
    backrefs: true
    line: '\1 /home          btrfs   subvol=/@home,{{ btrfs_mount_options }} 0 0'
    backup: false
    validate: '/usr/bin/findmnt --verify --tab-file %s'
  register: home_fstab_modified
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - home

- name: Verify fstab syntax after modifications
  ansible.builtin.command: findmnt --verify --tab-file /etc/fstab
  register: fstab_verify
  changed_when: false
  failed_when: fstab_verify.rc != 0
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - verification

- name: Display fstab verification results
  ansible.builtin.debug:
    msg: |
      ✓ fstab verification successful!
      {{ fstab_verify.stdout }}
  when: fstab_verify.rc == 0
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
    - verification

- name: Read updated fstab BTRFS entries
  ansible.builtin.shell: |
    grep -E '^\s*UUID=.*\s+btrfs\s+' /etc/fstab
  register: updated_btrfs_entries
  changed_when: false
  when: root_fstab_modified.changed or home_fstab_modified.changed
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem

- name: Display optimization summary
  ansible.builtin.debug:
    msg: |
      ================================================================================
      BTRFS Mount Options Optimization Complete
      ================================================================================

      Backup location: {{ btrfs_fstab_backup_dir }}/fstab.{{ ansible_date_time.iso8601_basic_short }}

      Updated BTRFS entries:
      {{ updated_btrfs_entries.stdout }}

      Optimizations applied:
      ✓ ssd              - SSD-specific allocation patterns
      ✓ noatime          - Prevent access time updates (reduces writes)
      ✓ compress=zstd:1  - Zstandard compression level 1 (balanced)
      ✓ space_cache=v2   - Modern free space cache
      ✓ discard=async    - Asynchronous TRIM for SSD longevity
      ✗ autodefrag       - REMOVED (not recommended for SSD)

      ================================================================================
      IMPORTANT: Changes require a reboot to take effect
      ================================================================================

      To apply immediately without rebooting (OPTIONAL):

      1. Remount root filesystem with new options:
         sudo mount -o remount,{{ btrfs_mount_options }},subvol=@ /

      2. Remount home filesystem with new options:
         sudo mount -o remount,{{ btrfs_mount_options }},subvol=@home /home

      3. Verify current mount options:
         mount | grep btrfs

      To rollback if needed:
         sudo cp {{ btrfs_fstab_backup_dir }}/fstab.{{ ansible_date_time.iso8601_basic_short }} /etc/fstab

      For best results, REBOOT your system when convenient.
      ================================================================================
  when: root_fstab_modified.changed or home_fstab_modified.changed
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem

- name: Display no changes message
  ansible.builtin.debug:
    msg: |
      ================================================================================
      BTRFS mount options are already optimized
      ================================================================================
      No changes were made to /etc/fstab.
      Current mount options already include the recommended optimizations.
      ================================================================================
  when: not (root_fstab_modified.changed or home_fstab_modified.changed)
  tags:
    - btrfs
    - btrfs_optimize
    - filesystem
