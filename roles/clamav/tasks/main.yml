---
- name: Install clamav
  ansible.builtin.package:
    name:
      - clamav
      - clamav-daemon
    state: present
  tags:
    - clamav
    - packages

- name: Ensure ClamAV log directory exists with correct permissions
  ansible.builtin.file:
    path: /var/log/clamav
    state: directory
    owner: clamav
    group: clamav
    mode: '0755'
  tags:
    - clamav
    - logs
    - security

- name: Ensure ClamAV log files exist with correct permissions
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    owner: clamav
    group: clamav
    mode: '0664'
    modification_time: preserve
    access_time: preserve
  loop:
    - /var/log/clamav/freshclam.log
    - /var/log/clamav/clamav.log
  tags:
    - clamav
    - logs
    - security

- name: Configure clamav daemon
  ansible.builtin.template:
    src: clamd.conf.j2
    dest: /etc/clamav/clamd.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart clamav-daemon
  tags:
    - clamav
    - configuration

- name: Create a global quarantine directory
  ansible.builtin.file:
    path: "{{ clamav_quarantine_dir }}"
    state: directory
    owner: clamav
    group: clamav
    mode: '0755'
  tags:
    - clamav
    - security

- name: Deploy ClamAV health check script
  ansible.builtin.template:
    src: clamav-verify.sh.j2
    dest: /usr/local/bin/clamav-verify.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - clamav
    - security
    - scripts

# Non-CI tasks (user-specific permissions and services)
- name: Grant clamav traversal access to the user's home directory
  ansible.posix.acl:
    path: "/home/{{ username }}"
    entity: clamav
    etype: group
    permissions: x
    state: present
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - security
    - acl

- name: Grant clamav rwx access to the user's downloads directory
  ansible.posix.acl:
    path: "/home/{{ username }}/downloads"
    entity: clamav
    etype: group
    permissions: rwx
    state: present
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - security
    - acl

- name: Grant clamav access to delete (quarantine) files in the downloads directory
  ansible.posix.acl:
    path: "/home/{{ username }}/downloads/"
    entity: clamav
    etype: group
    recursive: true
    permissions: rwx
    state: present
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - security
    - acl

- name: Add user to clamav group for freshclam access
  ansible.builtin.user:
    name: "{{ username }}"
    groups: clamav
    append: yes
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - users
    - security

- name: Ensure clamav-daemon is running and enabled
  ansible.builtin.service:
    name: clamav-daemon
    state: started
    enabled: true
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - services

- name: Ensure freshclam update service is running and enabled
  ansible.builtin.service:
    name: clamav-freshclam
    state: started
    enabled: true
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - services

- name: Install systemd service for clamonacc
  ansible.builtin.template:
    src: clamonacc.service.j2
    dest: /etc/systemd/system/clamonacc.service
    mode: '0644'
  notify: Reload systemd and restart clamonacc
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - services

- name: Ensure clamonacc service is running and enabled
  ansible.builtin.service:
    name: clamonacc
    state: started
    enabled: true
  when: lookup('env', 'CI') != 'true'
  tags:
    - clamav
    - services
